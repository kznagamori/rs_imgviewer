name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get tag
      id: tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Get version  
      id: version
      run: |
        VERSION=$(echo "${{ steps.tag.outputs.tag }}" | sed 's/^v//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

  build:
    name: Build Windows x64
    runs-on: windows-latest
    needs: [prepare]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Build
      run: |
        cargo build --release --target x86_64-pc-windows-msvc --verbose
        
    - name: Verify build
      run: |
        if (!(Test-Path "target\x86_64-pc-windows-msvc\release\rs_imgviewer.exe")) {
          Write-Error "Build failed: Executable not found"
          exit 1
        }
        $size = (Get-Item "target\x86_64-pc-windows-msvc\release\rs_imgviewer.exe").Length
        Write-Host "Build successful. Executable size: $size bytes"

    - name: Prepare release directory
      run: |
        $releaseDir = "rs_imgviewer-windows-x64"
        New-Item -ItemType Directory -Force -Path $releaseDir
        
        # Copy executable
        Copy-Item "target\x86_64-pc-windows-msvc\release\rs_imgviewer.exe" "$releaseDir\"
        
        # Copy README from repository
        Copy-Item "README.md" "$releaseDir\"
        
        # Copy LICENSE if exists
        if (Test-Path "LICENSE") {
          Copy-Item "LICENSE" "$releaseDir\"
        }
        
        # Create version info
        @"
        rs_imgviewer ${{ needs.prepare.outputs.version }}
        Target: x86_64-pc-windows-msvc
        Built: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss UTC')
        Commit: ${{ github.sha }}
        "@ | Out-File -FilePath "$releaseDir\VERSION.txt" -Encoding UTF8

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path "rs_imgviewer-windows-x64" -DestinationPath "rs_imgviewer-windows-x64.zip" -CompressionLevel Optimal

    - name: Create checksum
      run: |
        $hash = Get-FileHash "rs_imgviewer-windows-x64.zip" -Algorithm SHA256
        "$($hash.Hash.ToLower())  rs_imgviewer-windows-x64.zip" | Out-File -FilePath "rs_imgviewer-windows-x64.zip.sha256" -Encoding ASCII

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rs_imgviewer-windows-x64
        path: |
          rs_imgviewer-windows-x64.zip
          rs_imgviewer-windows-x64.zip.sha256
        
    - name: Upload executable separately
      uses: actions/upload-artifact@v4
      with:
        name: rs_imgviewer-exe
        path: target/x86_64-pc-windows-msvc/release/rs_imgviewer.exe

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [prepare, build]
    permissions:
      contents: write
    
    steps:
    - name: Download ZIP artifacts
      uses: actions/download-artifact@v4
      with:
        name: rs_imgviewer-windows-x64
        path: artifacts

    - name: Download executable artifact
      uses: actions/download-artifact@v4
      with:
        name: rs_imgviewer-exe
        path: artifacts

    - name: Display structure
      run: find artifacts -type f -name "*" | sort

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.prepare.outputs.tag }}
        name: "rs_imgviewer ${{ needs.prepare.outputs.version }}"
        files: |
          artifacts/rs_imgviewer-windows-x64.zip
          artifacts/rs_imgviewer-windows-x64.zip.sha256
          artifacts/rs_imgviewer.exe
        body: |
          ## rs_imgviewer ${{ needs.prepare.outputs.version }}
          
          WebP対応の高速画像ビューアーです。
          
          ### ダウンロード
          
          **推奨:** `rs_imgviewer-windows-x64.zip` - 完全パッケージ（実行ファイル + README + VERSION情報）
          
          または、実行ファイルのみ: `rs_imgviewer.exe`
          
          ### 詳細な情報
          
          使用方法、システム要件、設定方法などの詳細は [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) をご覧ください。
          
          ---
          
          **チェックサム:** SHA256ハッシュファイル（`.sha256`）でファイルの整合性を確認できます。
        draft: false
        prerelease: ${{ contains(needs.prepare.outputs.tag, 'alpha') || contains(needs.prepare.outputs.tag, 'beta') || contains(needs.prepare.outputs.tag, 'rc') }}
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}